{"ast":null,"code":"var _jsxFileName = \"/home/devtarekelsayed/Desktop/programing/mern-amazon-Ecommerce/front-end/src/pages/auth/register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BASE_URL, REGISTER } from \"../../Api/APi\";\nimport axios from \"axios\";\nimport \"./form.css\";\nimport \"./button.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"../../Loading/Loading\";\nimport Cookie from \"cookie-universal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  // cookie\n  const cookie = Cookie();\n  const Navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setloading(true);\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const res = await axios.post(`${BASE_URL}/${REGISTER}`, {\n        name,\n        email,\n        password,\n        confirmPassword\n      });\n      console.log(res.data.data.token);\n      setloading(false);\n      const token = res.data.data.token;\n      cookie.set(\"Bearer\", token);\n      Navigate(\"/\");\n      setMessage(\"User registered successfully\");\n    } catch (error) {\n      setloading(false);\n      if (error.response.status === 400) {\n        setMessage(\"Email is already been taken\");\n      } else {\n        setMessage(\"Internal Server Error\");\n      }\n    }\n  };\n  const handleregister = () => {\n    axios.get(\"http://localhost:4000/auth/google\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row h-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"form custom-form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Register Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"name\",\n                name: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value),\n                required: true,\n                placeholder: \"Enter your full name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                name: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true,\n                placeholder: \"example@mail.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                name: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true,\n                placeholder: \"********\",\n                minLength: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"confirmPassword\",\n                name: \"confirmPassword\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value),\n                required: true,\n                minLength: 6,\n                placeholder: \"********\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), message !== \"\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleregister,\n          children: \"clice me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Register, \"ap7haDHpaL1ESsW6DebIkJ7VGiA=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","BASE_URL","REGISTER","axios","useNavigate","Loading","Cookie","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","loading","setloading","cookie","Navigate","handleSubmit","e","preventDefault","res","post","console","log","data","token","set","error","response","status","handleregister","get","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","id","value","onChange","target","required","placeholder","htmlFor","minLength","onClick","_c","$RefreshReg$"],"sources":["/home/devtarekelsayed/Desktop/programing/mern-amazon-Ecommerce/front-end/src/pages/auth/register.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BASE_URL, REGISTER } from \"../../Api/APi\";\nimport axios from \"axios\";\nimport \"./form.css\";\nimport \"./button.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"../../Loading/Loading\";\nimport Cookie from \"cookie-universal\";\n\nconst Register = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  // cookie\n  const cookie = Cookie();\n\n  const Navigate = useNavigate();\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setloading(true);\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n      return;\n    }\n\n    try {\n      const res = await axios.post(`${BASE_URL}/${REGISTER}`, {\n        name,\n        email,\n        password,\n        confirmPassword,\n      });\n      console.log(res.data.data.token);\n      setloading(false);\n      const token = res.data.data.token;\n\n      cookie.set(\"Bearer\", token);\n      Navigate(\"/\");\n      setMessage(\"User registered successfully\");\n    } catch (error) {\n      setloading(false);\n      if (error.response.status === 400) {\n        setMessage(\"Email is already been taken\");\n      } else {\n        setMessage(\"Internal Server Error\");\n      }\n    }\n  };\n  const handleregister = () => {\n    axios.get(\"http://localhost:4000/auth/google\");\n  };\n  return (\n    <>\n      {loading && <Loading />}\n      <div className=\"container\">\n        <div className=\"row h-100\">\n          <form onSubmit={handleSubmit} className=\"form custom-form\">\n            <div className=\"custom-form\">\n              <h1>Register Now</h1>\n              <div className=\"form-control\">\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                  placeholder=\"Enter your full name\"\n                />\n                <label htmlFor=\"name\">Full Name</label>\n              </div>\n              <div className=\"form-control\">\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                  placeholder=\"example@mail.com\"\n                />\n                <label htmlFor=\"email\">Email</label>\n              </div>\n              <div className=\"form-control\">\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                  placeholder=\"********\"\n                  minLength={6}\n                />\n                <label htmlFor=\"password\">Password</label>\n              </div>\n              <div className=\"form-control\">\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  required\n                  minLength={6}\n                  placeholder=\"********\"\n                />\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Register\n              </button>\n              {message !== \"\" && <span className=\"error\">{message}</span>}\n            </div>\n          </form>\n          <button onClick={() => handleregister}>clice me</button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}